openapi: 3.0.0
paths:
  /measurment-batch:
    post:
      operationId: MeasurerBatchController_create
      summary: 'Create measurement batch'
      description: Create measurement batch with given production batch id
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeasurementBatchCreateDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeasurementBatchResponse'
info:
  title: EarnDLT API Documentation
  description: |
    ### Introduction
    Data exchange via API is a core component of the EarnDLT product suite. The following documentation provides the necessary details to allow an API engineer to both inject data into the Earn system as well as to extract critical reporting. If you have further questions please contact support@earndlt.com.

    ### EarnDLT Minting Flow Overview

    ![Minting Flow](https://raw.githubusercontent.com/earndlt/earndlt-external-docs/main/mintingFlow.jpeg)

    This API supports the ability for a measuring party, sometimes working on the behalf of a shared client, to return emissions data for the client’s pre-loaded production data. Some key notes about providing this data:

    - The Production data uploaded to EarnDLT by the Producer will be the Reconciled Sales Volume and not the Gross Volume Produced.
    - The tokens minted to the EarnDLT blockchain must match the reconciled volumes reported to regulatory entities.
    - The final number of MMBtus minted on the EarnDLT platform will be available 60-90 days after the Natural Gas is pulled from the well.
    - One EarnDLT Natural Gas token represents one MMBtu produced from one Well.

    Oftentimes, the reconciled sales volumes required by the platform are available only at the site or pad level and not the more precise well level. To address this issue, EarnDLT recommends taking the pad-level reconciled volumes and allocating MMBtus to each well within the pad based on the proportion of total MMTBus produced.

    #### Key Terms
    Production Source
    The individual unit or facility that produced the physical energy to be minted on the EarnDLT platform. For example, for Natural Gas, the Production source is the wellhead on a pad where the natural gas is pumped. For Methanol, the Production source is the Facility where the Methanol is produced.

    #### Minting
    The data management process performed on the EarnDLT platform encodes the physical volume of energy produced, the Measured, Reported, and Verified (MRV) emissions data, and related environmental attributes into the tokens that are stored on EarnDLT’s proprietary blockchain. Encoding attributes and data onto a blockchain token is also called tokenization.

    #### Batch
    The EarnDLT object represents the physical volume of energy produced for the period of time to be minted into a digital token. For an example from Natural Gas, a Batch could represent the energy produced in MMBtus from the wellheads of 20 pads from November 1 to November 30, 2023. Each token can always be traced back to its original minting batch regardless of the number of times the token has been bought and sold.

    #### Asset
    The generalized attribute name for a token on the EarnDLT platform. An asset represents the emissions data for a single production source for a period of time within a batch.

    #### Pollutant
    The generalized attribute name that identifies any fugitive Greenhouse Gas emissions measured at the Production Source. Commonly, the measurement will include the mass of the GHG emission and a calculation of the intensity of the emission based on a specified standard. For natural gas, the main pollutant will be methane (CH4). The pollutant object would contain the methane mass and methane intensity. One production source can have multiple measured pollutants.
  version: '1.0'
  contact: {}
tags: []
servers: []
components:
  securitySchemes:
    Authorization:
      scheme: bearer
      bearerFormat: API Key
      type: http
      description: Use company api key
  schemas:
    MeasurementBatchResponse:
      type: object
      properties:
        response:
          type: string
    MeasurementBatchCreateDto:
      type: object
      properties:
        productionBatchId:
          type: string
        standards:
          type: array
          items:
            $ref: '#/components/schemas/StandardDto'
        metadata:
          type: array
          items:
            type: object
      required:
        - productionBatchId
        - standards
    StandardDto:
      type: object
      properties:
        type:
          enum:
            - redII
            - ogci
            - ngsi
            - tfs
        carbonIntensity:
          type: object
          properties:
            value:
              type: integer
            unitOfMeasurement:
              enum: ['g/MMBtu', 'kg/MMBtu', 'MT/MMBtu']
        metadata:
          type: array
          items:
            type: object
        consumption:
          type: object
          properties:
            value:
              type: number
            unitOfMeasurement: 
              type: string
        emissions:
          type: array
          items:
            $ref: '#/components/schemas/Emission'        
    Emission:
      type: object
      properties:
        type:
          enum: [co2, ch4, n20, grid]
        value: 
          type: number
        unitOfMeasurement:
          enum: ['g/MMBtu', 'kg/MMBtu', 'MT/MMBtu']
        carbonIntesity: 
          type: object
          properties:
            value:
              type: number
            unitOfMeasurement:
              enum: ['g/MMBtu', 'kg/MMBtu', 'MT/MMBtu']
            factor:
              enum: [AR4 100-year, EPA eGRID 2023]
        methodologyType:
          enum: [Measured, Estimated, MeasurementInformed]
          example: Measured
        methodology:
          type: string
          example: "GHGRP estimates of N2O intensity for year 202X applied to 202X [measurer]"
        source:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
            measurementTechnology:
              type: string
            frequency:
              enum: [continuous, annual, quarterly]
            sensitivity:
              type: object
              properties:
                value:
                  type: number
                unitOfMeasurement:
                  enum: [check]
                published_performance:
                  type: string
              example:
                value: 42
                unitOfMeasurement: check
                published_performance: check
          example:
            id: Measurer internal source id [measurer]
            name: Project Canary sensor XYZ  [measurer]
            measurementTechnology: check
            frequency: continuous
        metadata:
          type: array
          items:
            type: object